services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-network

  kafka:
    build:
      context: .
      dockerfile: Dockerfile.kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
    networks:
      - kafka-network
    depends_on:
      - zookeeper

  db:
    image: postgres:13
    restart: always
    env_file:
      - postgres.env
    ports:
      - "5434:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
      - nfs-data:/mnt/nfs_share
    networks:
      - kafka-network

  server:
    build: ./server
    env_file:
      - server_config.env
    depends_on:
      - db
      - kafka
    environment:
      PORT: 5000
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - nfs-data:/mnt/nfs_share
    networks:
      - kafka-network
    command: npm run dev

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - kafka-network

  nfs-server:
    build:
      context: .
      dockerfile: Dockerfile.nfs
    volumes:
      - nfs-data:/mnt/nfs_share
    privileged: true
    ports:
      - "2049:2049"
    networks:
      - kafka-network

  s3-minio:
    image: quay.io/minio/minio
    container_name: s3-minio
    ports:
      - "9000:9000"   # S3 API
      - "9090:9090"   # Web Console
    env_file:
      - s3-minio.env
    command: server /data --console-address ":9090"
    volumes:
      - minio-data:/data
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge

volumes:
  db-data:
  nfs-data: {}
  minio-data: